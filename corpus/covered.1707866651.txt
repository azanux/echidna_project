/share/test/TestDutchAuctionOptimization.sol
  1 |     | // SPDX-License-Identifier: UNLICENSED
  2 |     | pragma solidity ^0.8.13;
  3 |     | 
  4 | *r  | contract TestDutchAuctionOptimization {
  5 |     |     int256 maxPriceDifference;
  6 |     | 
  7 | *   |     function setMaxPriceDifference(uint256 startPrice, uint256 endPrice, uint256 startTime, uint256 endTime) public {
  8 | *r  |         if (endTime < (startTime + 900)) revert();
  9 | *r  |         if (startPrice <= endPrice) revert();
 10 |     | 
 11 | *   |         uint256 numerator = (startPrice - endPrice) * (block.timestamp - startTime);
 12 | *   |         uint256 denominator = endTime - startTime;
 13 | *   |         uint256 stepDecrease = numerator / denominator;
 14 | *   |         uint256 currentAuctionPrice = startPrice - stepDecrease;
 15 |     | 
 16 | *   |         if (currentAuctionPrice < endPrice) {
 17 | *   |             maxPriceDifference = int256(endPrice - currentAuctionPrice);
 18 |     |         }
 19 | *   |         if (currentAuctionPrice > startPrice) {
 20 |     |             maxPriceDifference = int256(currentAuctionPrice - startPrice);
 21 |     |         }
 22 |     |     }
 23 |     | 
 24 |     |     function echidna_opt_price_difference() public view returns (int256) {
 25 |     |         return maxPriceDifference;
 26 |     |     }
 27 |     | }

